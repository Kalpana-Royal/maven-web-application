def sendSlackNotifications(StringbuildStatus = 'STARTED') {
 
  buildStatus =  buildStatus ?: 'SUCCESS'
  
  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if(buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else{
    color = 'RED'
    colorCode = '#FF0000'
  }
    
  // Send notifications
  slackSend (color: colorCode, message: summary)
  }

node{  

echo "Job Name is:  ${env.JOB_NAME}"
echo "Node name is:  ${env.NODE_NAME}"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

def mavenHome = tool name: 'maven 3.8.5'

try{ 
//Get the code from GitHub Repo
stage('Checkout code'){
git branch: 'development', credentialsId: '91cf23fb-efe6-4fc9-af87-d05a335d5c64', url: 'https://github.com/Kalpana-Royal/maven-web-application.git'
}
//Do the build by using Maven Build tool
stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}
/*
//Execute the SonarQube Report 
stage('ExecuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn sonar:sonar"
}

//Upload Artifacts into Artifactory Repo
stage('UploadArtifactsintoNexus'){
sh "${mavenHome}/bin/mvn deploy"
} 

//Deploy Application into Tomcat Server 
stage('DeployApplicationIntoTomcatServer'){
sshagent(['dda41cd0-5241-4080-a3a2-c71535df0d1c']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.233.122.0:/opt/apache-tomcat-9.0.62/webapps/"
}

}
*/
}//Try Closing
   catch(e){
   currentBuild.result = "FAILED"
   }
   finally{
   
   sendSlackNotifications(currentBuild.result)
   }
}//Node Closing

 
